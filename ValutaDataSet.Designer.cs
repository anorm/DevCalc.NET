//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DevCalcNET {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ValutaDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ValutaDataSet : System.Data.DataSet {
        
        private valutaDataTable tablevaluta;
        
        private valutakursDataTable tablevalutakurs;
        
        private overforselDataTable tableoverforsel;
        
        private seddelDataTable tableseddel;
        
        private System.Data.DataRelation relationvaluta_valutakurs;
        
        private System.Data.DataRelation relationvalutakurs_overforsel;
        
        private System.Data.DataRelation relationvalutakurs_seddel;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ValutaDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ValutaDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["valuta"] != null)) {
                    base.Tables.Add(new valutaDataTable(ds.Tables["valuta"]));
                }
                if ((ds.Tables["valutakurs"] != null)) {
                    base.Tables.Add(new valutakursDataTable(ds.Tables["valutakurs"]));
                }
                if ((ds.Tables["overforsel"] != null)) {
                    base.Tables.Add(new overforselDataTable(ds.Tables["overforsel"]));
                }
                if ((ds.Tables["seddel"] != null)) {
                    base.Tables.Add(new seddelDataTable(ds.Tables["seddel"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public valutaDataTable valuta {
            get {
                return this.tablevaluta;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public valutakursDataTable valutakurs {
            get {
                return this.tablevalutakurs;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public overforselDataTable overforsel {
            get {
                return this.tableoverforsel;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public seddelDataTable seddel {
            get {
                return this.tableseddel;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ValutaDataSet cln = ((ValutaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["valuta"] != null)) {
                    base.Tables.Add(new valutaDataTable(ds.Tables["valuta"]));
                }
                if ((ds.Tables["valutakurs"] != null)) {
                    base.Tables.Add(new valutakursDataTable(ds.Tables["valutakurs"]));
                }
                if ((ds.Tables["overforsel"] != null)) {
                    base.Tables.Add(new overforselDataTable(ds.Tables["overforsel"]));
                }
                if ((ds.Tables["seddel"] != null)) {
                    base.Tables.Add(new seddelDataTable(ds.Tables["seddel"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevaluta = ((valutaDataTable)(base.Tables["valuta"]));
            if ((initTable == true)) {
                if ((this.tablevaluta != null)) {
                    this.tablevaluta.InitVars();
                }
            }
            this.tablevalutakurs = ((valutakursDataTable)(base.Tables["valutakurs"]));
            if ((initTable == true)) {
                if ((this.tablevalutakurs != null)) {
                    this.tablevalutakurs.InitVars();
                }
            }
            this.tableoverforsel = ((overforselDataTable)(base.Tables["overforsel"]));
            if ((initTable == true)) {
                if ((this.tableoverforsel != null)) {
                    this.tableoverforsel.InitVars();
                }
            }
            this.tableseddel = ((seddelDataTable)(base.Tables["seddel"]));
            if ((initTable == true)) {
                if ((this.tableseddel != null)) {
                    this.tableseddel.InitVars();
                }
            }
            this.relationvaluta_valutakurs = this.Relations["valuta_valutakurs"];
            this.relationvalutakurs_overforsel = this.Relations["valutakurs_overforsel"];
            this.relationvalutakurs_seddel = this.Relations["valutakurs_seddel"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ValutaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevaluta = new valutaDataTable();
            base.Tables.Add(this.tablevaluta);
            this.tablevalutakurs = new valutakursDataTable();
            base.Tables.Add(this.tablevalutakurs);
            this.tableoverforsel = new overforselDataTable();
            base.Tables.Add(this.tableoverforsel);
            this.tableseddel = new seddelDataTable();
            base.Tables.Add(this.tableseddel);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("valuta_valutakurs", new System.Data.DataColumn[] {
                        this.tablevaluta.valuta_IdColumn}, new System.Data.DataColumn[] {
                        this.tablevalutakurs.valuta_IdColumn});
            this.tablevalutakurs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("valutakurs_overforsel", new System.Data.DataColumn[] {
                        this.tablevalutakurs.valutakurs_IdColumn}, new System.Data.DataColumn[] {
                        this.tableoverforsel.valutakurs_IdColumn});
            this.tableoverforsel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("valutakurs_seddel", new System.Data.DataColumn[] {
                        this.tablevalutakurs.valutakurs_IdColumn}, new System.Data.DataColumn[] {
                        this.tableseddel.valutakurs_IdColumn});
            this.tableseddel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationvaluta_valutakurs = new System.Data.DataRelation("valuta_valutakurs", new System.Data.DataColumn[] {
                        this.tablevaluta.valuta_IdColumn}, new System.Data.DataColumn[] {
                        this.tablevalutakurs.valuta_IdColumn}, false);
            this.relationvaluta_valutakurs.Nested = true;
            this.Relations.Add(this.relationvaluta_valutakurs);
            this.relationvalutakurs_overforsel = new System.Data.DataRelation("valutakurs_overforsel", new System.Data.DataColumn[] {
                        this.tablevalutakurs.valutakurs_IdColumn}, new System.Data.DataColumn[] {
                        this.tableoverforsel.valutakurs_IdColumn}, false);
            this.relationvalutakurs_overforsel.Nested = true;
            this.Relations.Add(this.relationvalutakurs_overforsel);
            this.relationvalutakurs_seddel = new System.Data.DataRelation("valutakurs_seddel", new System.Data.DataColumn[] {
                        this.tablevalutakurs.valutakurs_IdColumn}, new System.Data.DataColumn[] {
                        this.tableseddel.valutakurs_IdColumn}, false);
            this.relationvalutakurs_seddel.Nested = true;
            this.Relations.Add(this.relationvalutakurs_seddel);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevaluta() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevalutakurs() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoverforsel() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeseddel() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ValutaDataSet ds = new ValutaDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void valutaRowChangeEventHandler(object sender, valutaRowChangeEvent e);
        
        public delegate void valutakursRowChangeEventHandler(object sender, valutakursRowChangeEvent e);
        
        public delegate void overforselRowChangeEventHandler(object sender, overforselRowChangeEvent e);
        
        public delegate void seddelRowChangeEventHandler(object sender, seddelRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class valutaDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnoverskrift;
            
            private System.Data.DataColumn columnoppdatert;
            
            private System.Data.DataColumn columnvaluta_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaDataTable() {
                this.TableName = "valuta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal valutaDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected valutaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn overskriftColumn {
                get {
                    return this.columnoverskrift;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn oppdatertColumn {
                get {
                    return this.columnoppdatert;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valuta_IdColumn {
                get {
                    return this.columnvaluta_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRow this[int index] {
                get {
                    return ((valutaRow)(this.Rows[index]));
                }
            }
            
            public event valutaRowChangeEventHandler valutaRowChanging;
            
            public event valutaRowChangeEventHandler valutaRowChanged;
            
            public event valutaRowChangeEventHandler valutaRowDeleting;
            
            public event valutaRowChangeEventHandler valutaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvalutaRow(valutaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRow AddvalutaRow(string overskrift, string oppdatert) {
                valutaRow rowvalutaRow = ((valutaRow)(this.NewRow()));
                rowvalutaRow.ItemArray = new object[] {
                        overskrift,
                        oppdatert,
                        null};
                this.Rows.Add(rowvalutaRow);
                return rowvalutaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                valutaDataTable cln = ((valutaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new valutaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnoverskrift = base.Columns["overskrift"];
                this.columnoppdatert = base.Columns["oppdatert"];
                this.columnvaluta_Id = base.Columns["valuta_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnoverskrift = new System.Data.DataColumn("overskrift", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoverskrift);
                this.columnoppdatert = new System.Data.DataColumn("oppdatert", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoppdatert);
                this.columnvaluta_Id = new System.Data.DataColumn("valuta_Id", typeof(int), null, System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnvaluta_Id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnvaluta_Id}, true));
                this.columnvaluta_Id.AutoIncrement = true;
                this.columnvaluta_Id.AllowDBNull = false;
                this.columnvaluta_Id.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRow NewvalutaRow() {
                return ((valutaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new valutaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(valutaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.valutaRowChanged != null)) {
                    this.valutaRowChanged(this, new valutaRowChangeEvent(((valutaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.valutaRowChanging != null)) {
                    this.valutaRowChanging(this, new valutaRowChangeEvent(((valutaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.valutaRowDeleted != null)) {
                    this.valutaRowDeleted(this, new valutaRowChangeEvent(((valutaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.valutaRowDeleting != null)) {
                    this.valutaRowDeleting(this, new valutaRowChangeEvent(((valutaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevalutaRow(valutaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ValutaDataSet ds = new ValutaDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "valutaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class valutakursDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnland;
            
            private System.Data.DataColumn columnisokode;
            
            private System.Data.DataColumn columnkode;
            
            private System.Data.DataColumn columnenhet;
            
            private System.Data.DataColumn columnnavn;
            
            private System.Data.DataColumn columnnavn2;
            
            private System.Data.DataColumn columnvalutakurs_Id;
            
            private System.Data.DataColumn columnvaluta_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursDataTable() {
                this.TableName = "valutakurs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal valutakursDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected valutakursDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn landColumn {
                get {
                    return this.columnland;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isokodeColumn {
                get {
                    return this.columnisokode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kodeColumn {
                get {
                    return this.columnkode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn enhetColumn {
                get {
                    return this.columnenhet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn navnColumn {
                get {
                    return this.columnnavn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn navn2Column {
                get {
                    return this.columnnavn2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valutakurs_IdColumn {
                get {
                    return this.columnvalutakurs_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valuta_IdColumn {
                get {
                    return this.columnvaluta_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow this[int index] {
                get {
                    return ((valutakursRow)(this.Rows[index]));
                }
            }
            
            public event valutakursRowChangeEventHandler valutakursRowChanging;
            
            public event valutakursRowChangeEventHandler valutakursRowChanged;
            
            public event valutakursRowChangeEventHandler valutakursRowDeleting;
            
            public event valutakursRowChangeEventHandler valutakursRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvalutakursRow(valutakursRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow AddvalutakursRow(string land, string isokode, string kode, string enhet, string navn, string navn2, valutaRow parentvalutaRowByvaluta_valutakurs) {
                valutakursRow rowvalutakursRow = ((valutakursRow)(this.NewRow()));
                rowvalutakursRow.ItemArray = new object[] {
                        land,
                        isokode,
                        kode,
                        enhet,
                        navn,
                        navn2,
                        null,
                        parentvalutaRowByvaluta_valutakurs[2]};
                this.Rows.Add(rowvalutakursRow);
                return rowvalutakursRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                valutakursDataTable cln = ((valutakursDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new valutakursDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnland = base.Columns["land"];
                this.columnisokode = base.Columns["isokode"];
                this.columnkode = base.Columns["kode"];
                this.columnenhet = base.Columns["enhet"];
                this.columnnavn = base.Columns["navn"];
                this.columnnavn2 = base.Columns["navn2"];
                this.columnvalutakurs_Id = base.Columns["valutakurs_Id"];
                this.columnvaluta_Id = base.Columns["valuta_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnland = new System.Data.DataColumn("land", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnland);
                this.columnisokode = new System.Data.DataColumn("isokode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisokode);
                this.columnkode = new System.Data.DataColumn("kode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkode);
                this.columnenhet = new System.Data.DataColumn("enhet", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnenhet);
                this.columnnavn = new System.Data.DataColumn("navn", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnavn);
                this.columnnavn2 = new System.Data.DataColumn("navn2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnavn2);
                this.columnvalutakurs_Id = new System.Data.DataColumn("valutakurs_Id", typeof(int), null, System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnvalutakurs_Id);
                this.columnvaluta_Id = new System.Data.DataColumn("valuta_Id", typeof(int), null, System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnvaluta_Id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnvalutakurs_Id}, true));
                this.columnvalutakurs_Id.AutoIncrement = true;
                this.columnvalutakurs_Id.AllowDBNull = false;
                this.columnvalutakurs_Id.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow NewvalutakursRow() {
                return ((valutakursRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new valutakursRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(valutakursRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.valutakursRowChanged != null)) {
                    this.valutakursRowChanged(this, new valutakursRowChangeEvent(((valutakursRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.valutakursRowChanging != null)) {
                    this.valutakursRowChanging(this, new valutakursRowChangeEvent(((valutakursRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.valutakursRowDeleted != null)) {
                    this.valutakursRowDeleted(this, new valutakursRowChangeEvent(((valutakursRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.valutakursRowDeleting != null)) {
                    this.valutakursRowDeleting(this, new valutakursRowChangeEvent(((valutakursRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevalutakursRow(valutakursRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ValutaDataSet ds = new ValutaDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "valutakursDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class overforselDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnkjop;
            
            private System.Data.DataColumn columnsalg;
            
            private System.Data.DataColumn columnendring;
            
            private System.Data.DataColumn columnforrige;
            
            private System.Data.DataColumn columnmidtkurs;
            
            private System.Data.DataColumn columnvalutakurs_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselDataTable() {
                this.TableName = "overforsel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal overforselDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected overforselDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kjopColumn {
                get {
                    return this.columnkjop;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn salgColumn {
                get {
                    return this.columnsalg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn endringColumn {
                get {
                    return this.columnendring;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn forrigeColumn {
                get {
                    return this.columnforrige;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn midtkursColumn {
                get {
                    return this.columnmidtkurs;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valutakurs_IdColumn {
                get {
                    return this.columnvalutakurs_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRow this[int index] {
                get {
                    return ((overforselRow)(this.Rows[index]));
                }
            }
            
            public event overforselRowChangeEventHandler overforselRowChanging;
            
            public event overforselRowChangeEventHandler overforselRowChanged;
            
            public event overforselRowChangeEventHandler overforselRowDeleting;
            
            public event overforselRowChangeEventHandler overforselRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddoverforselRow(overforselRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRow AddoverforselRow(string kjop, string salg, string endring, string forrige, string midtkurs, valutakursRow parentvalutakursRowByvalutakurs_overforsel) {
                overforselRow rowoverforselRow = ((overforselRow)(this.NewRow()));
                rowoverforselRow.ItemArray = new object[] {
                        kjop,
                        salg,
                        endring,
                        forrige,
                        midtkurs,
                        parentvalutakursRowByvalutakurs_overforsel[6]};
                this.Rows.Add(rowoverforselRow);
                return rowoverforselRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                overforselDataTable cln = ((overforselDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new overforselDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkjop = base.Columns["kjop"];
                this.columnsalg = base.Columns["salg"];
                this.columnendring = base.Columns["endring"];
                this.columnforrige = base.Columns["forrige"];
                this.columnmidtkurs = base.Columns["midtkurs"];
                this.columnvalutakurs_Id = base.Columns["valutakurs_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkjop = new System.Data.DataColumn("kjop", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkjop);
                this.columnsalg = new System.Data.DataColumn("salg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalg);
                this.columnendring = new System.Data.DataColumn("endring", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnendring);
                this.columnforrige = new System.Data.DataColumn("forrige", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnforrige);
                this.columnmidtkurs = new System.Data.DataColumn("midtkurs", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmidtkurs);
                this.columnvalutakurs_Id = new System.Data.DataColumn("valutakurs_Id", typeof(int), null, System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnvalutakurs_Id);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRow NewoverforselRow() {
                return ((overforselRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new overforselRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(overforselRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.overforselRowChanged != null)) {
                    this.overforselRowChanged(this, new overforselRowChangeEvent(((overforselRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.overforselRowChanging != null)) {
                    this.overforselRowChanging(this, new overforselRowChangeEvent(((overforselRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.overforselRowDeleted != null)) {
                    this.overforselRowDeleted(this, new overforselRowChangeEvent(((overforselRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.overforselRowDeleting != null)) {
                    this.overforselRowDeleting(this, new overforselRowChangeEvent(((overforselRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveoverforselRow(overforselRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ValutaDataSet ds = new ValutaDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "overforselDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class seddelDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnkjop;
            
            private System.Data.DataColumn columnsalg;
            
            private System.Data.DataColumn columnvalutakurs_Id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelDataTable() {
                this.TableName = "seddel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal seddelDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected seddelDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kjopColumn {
                get {
                    return this.columnkjop;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn salgColumn {
                get {
                    return this.columnsalg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valutakurs_IdColumn {
                get {
                    return this.columnvalutakurs_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRow this[int index] {
                get {
                    return ((seddelRow)(this.Rows[index]));
                }
            }
            
            public event seddelRowChangeEventHandler seddelRowChanging;
            
            public event seddelRowChangeEventHandler seddelRowChanged;
            
            public event seddelRowChangeEventHandler seddelRowDeleting;
            
            public event seddelRowChangeEventHandler seddelRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddseddelRow(seddelRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRow AddseddelRow(string kjop, string salg, valutakursRow parentvalutakursRowByvalutakurs_seddel) {
                seddelRow rowseddelRow = ((seddelRow)(this.NewRow()));
                rowseddelRow.ItemArray = new object[] {
                        kjop,
                        salg,
                        parentvalutakursRowByvalutakurs_seddel[6]};
                this.Rows.Add(rowseddelRow);
                return rowseddelRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                seddelDataTable cln = ((seddelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new seddelDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkjop = base.Columns["kjop"];
                this.columnsalg = base.Columns["salg"];
                this.columnvalutakurs_Id = base.Columns["valutakurs_Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkjop = new System.Data.DataColumn("kjop", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkjop);
                this.columnsalg = new System.Data.DataColumn("salg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalg);
                this.columnvalutakurs_Id = new System.Data.DataColumn("valutakurs_Id", typeof(int), null, System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnvalutakurs_Id);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRow NewseddelRow() {
                return ((seddelRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new seddelRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(seddelRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.seddelRowChanged != null)) {
                    this.seddelRowChanged(this, new seddelRowChangeEvent(((seddelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.seddelRowChanging != null)) {
                    this.seddelRowChanging(this, new seddelRowChangeEvent(((seddelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.seddelRowDeleted != null)) {
                    this.seddelRowDeleted(this, new seddelRowChangeEvent(((seddelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.seddelRowDeleting != null)) {
                    this.seddelRowDeleting(this, new seddelRowChangeEvent(((seddelRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveseddelRow(seddelRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ValutaDataSet ds = new ValutaDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "seddelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class valutaRow : System.Data.DataRow {
            
            private valutaDataTable tablevaluta;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal valutaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevaluta = ((valutaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string overskrift {
                get {
                    try {
                        return ((string)(this[this.tablevaluta.overskriftColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'overskrift\' in table \'valuta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevaluta.overskriftColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oppdatert {
                get {
                    try {
                        return ((string)(this[this.tablevaluta.oppdatertColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'oppdatert\' in table \'valuta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevaluta.oppdatertColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int valuta_Id {
                get {
                    return ((int)(this[this.tablevaluta.valuta_IdColumn]));
                }
                set {
                    this[this.tablevaluta.valuta_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoverskriftNull() {
                return this.IsNull(this.tablevaluta.overskriftColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoverskriftNull() {
                this[this.tablevaluta.overskriftColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoppdatertNull() {
                return this.IsNull(this.tablevaluta.oppdatertColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoppdatertNull() {
                this[this.tablevaluta.oppdatertColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow[] GetvalutakursRows() {
                return ((valutakursRow[])(base.GetChildRows(this.Table.ChildRelations["valuta_valutakurs"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class valutakursRow : System.Data.DataRow {
            
            private valutakursDataTable tablevalutakurs;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal valutakursRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevalutakurs = ((valutakursDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string land {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.landColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'land\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.landColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isokode {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.isokodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isokode\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.isokodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kode {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.kodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kode\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.kodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string enhet {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.enhetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'enhet\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.enhetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string navn {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.navnColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'navn\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.navnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string navn2 {
                get {
                    try {
                        return ((string)(this[this.tablevalutakurs.navn2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'navn2\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.navn2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int valutakurs_Id {
                get {
                    return ((int)(this[this.tablevalutakurs.valutakurs_IdColumn]));
                }
                set {
                    this[this.tablevalutakurs.valutakurs_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int valuta_Id {
                get {
                    try {
                        return ((int)(this[this.tablevalutakurs.valuta_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'valuta_Id\' in table \'valutakurs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevalutakurs.valuta_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRow valutaRow {
                get {
                    return ((valutaRow)(this.GetParentRow(this.Table.ParentRelations["valuta_valutakurs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["valuta_valutakurs"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslandNull() {
                return this.IsNull(this.tablevalutakurs.landColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlandNull() {
                this[this.tablevalutakurs.landColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisokodeNull() {
                return this.IsNull(this.tablevalutakurs.isokodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisokodeNull() {
                this[this.tablevalutakurs.isokodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskodeNull() {
                return this.IsNull(this.tablevalutakurs.kodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkodeNull() {
                this[this.tablevalutakurs.kodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenhetNull() {
                return this.IsNull(this.tablevalutakurs.enhetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenhetNull() {
                this[this.tablevalutakurs.enhetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnavnNull() {
                return this.IsNull(this.tablevalutakurs.navnColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnavnNull() {
                this[this.tablevalutakurs.navnColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnavn2Null() {
                return this.IsNull(this.tablevalutakurs.navn2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnavn2Null() {
                this[this.tablevalutakurs.navn2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvaluta_IdNull() {
                return this.IsNull(this.tablevalutakurs.valuta_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvaluta_IdNull() {
                this[this.tablevalutakurs.valuta_IdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRow[] GetoverforselRows() {
                return ((overforselRow[])(base.GetChildRows(this.Table.ChildRelations["valutakurs_overforsel"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRow[] GetseddelRows() {
                return ((seddelRow[])(base.GetChildRows(this.Table.ChildRelations["valutakurs_seddel"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class overforselRow : System.Data.DataRow {
            
            private overforselDataTable tableoverforsel;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal overforselRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoverforsel = ((overforselDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kjop {
                get {
                    try {
                        return ((string)(this[this.tableoverforsel.kjopColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kjop\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.kjopColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salg {
                get {
                    try {
                        return ((string)(this[this.tableoverforsel.salgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'salg\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.salgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string endring {
                get {
                    try {
                        return ((string)(this[this.tableoverforsel.endringColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'endring\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.endringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string forrige {
                get {
                    try {
                        return ((string)(this[this.tableoverforsel.forrigeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'forrige\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.forrigeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string midtkurs {
                get {
                    try {
                        return ((string)(this[this.tableoverforsel.midtkursColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'midtkurs\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.midtkursColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int valutakurs_Id {
                get {
                    try {
                        return ((int)(this[this.tableoverforsel.valutakurs_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'valutakurs_Id\' in table \'overforsel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoverforsel.valutakurs_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow valutakursRow {
                get {
                    return ((valutakursRow)(this.GetParentRow(this.Table.ParentRelations["valutakurs_overforsel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["valutakurs_overforsel"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskjopNull() {
                return this.IsNull(this.tableoverforsel.kjopColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkjopNull() {
                this[this.tableoverforsel.kjopColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalgNull() {
                return this.IsNull(this.tableoverforsel.salgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalgNull() {
                this[this.tableoverforsel.salgColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsendringNull() {
                return this.IsNull(this.tableoverforsel.endringColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetendringNull() {
                this[this.tableoverforsel.endringColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsforrigeNull() {
                return this.IsNull(this.tableoverforsel.forrigeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetforrigeNull() {
                this[this.tableoverforsel.forrigeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmidtkursNull() {
                return this.IsNull(this.tableoverforsel.midtkursColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmidtkursNull() {
                this[this.tableoverforsel.midtkursColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvalutakurs_IdNull() {
                return this.IsNull(this.tableoverforsel.valutakurs_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvalutakurs_IdNull() {
                this[this.tableoverforsel.valutakurs_IdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class seddelRow : System.Data.DataRow {
            
            private seddelDataTable tableseddel;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal seddelRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableseddel = ((seddelDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kjop {
                get {
                    try {
                        return ((string)(this[this.tableseddel.kjopColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kjop\' in table \'seddel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseddel.kjopColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salg {
                get {
                    try {
                        return ((string)(this[this.tableseddel.salgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'salg\' in table \'seddel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseddel.salgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int valutakurs_Id {
                get {
                    try {
                        return ((int)(this[this.tableseddel.valutakurs_IdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'valutakurs_Id\' in table \'seddel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableseddel.valutakurs_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow valutakursRow {
                get {
                    return ((valutakursRow)(this.GetParentRow(this.Table.ParentRelations["valutakurs_seddel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["valutakurs_seddel"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskjopNull() {
                return this.IsNull(this.tableseddel.kjopColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkjopNull() {
                this[this.tableseddel.kjopColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalgNull() {
                return this.IsNull(this.tableseddel.salgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalgNull() {
                this[this.tableseddel.salgColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvalutakurs_IdNull() {
                return this.IsNull(this.tableseddel.valutakurs_IdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvalutakurs_IdNull() {
                this[this.tableseddel.valutakurs_IdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class valutaRowChangeEvent : System.EventArgs {
            
            private valutaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRowChangeEvent(valutaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class valutakursRowChangeEvent : System.EventArgs {
            
            private valutakursRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRowChangeEvent(valutakursRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public valutakursRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class overforselRowChangeEvent : System.EventArgs {
            
            private overforselRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRowChangeEvent(overforselRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public overforselRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class seddelRowChangeEvent : System.EventArgs {
            
            private seddelRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRowChangeEvent(seddelRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public seddelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591